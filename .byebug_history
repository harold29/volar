exit
potato.traveler_type = 4
potato.traveler_type = 2
potato.traveler_type = 5
potato
potato = build(:traveler)
Traveler.new()
traveler = build(:traveler, traveler_type: 5)
traveler = build(:traveler, traveler_type: 'invalid_type')
exit
additional_service
additional_service.errors
additional_service.valid?
exit
additional_service.valid?
exit
EXIT
FFaker::Number.decimal2
FFaker::Number.decimal
FFaker::Number.decimal2
FFaker::Number.decimal 2
FFaker::Number.decimal
exit
potato.price_currency
potato.price_currency_id
potato = Price.new
exit
potato.price_currency_id
potato.price_currency
potato = Price.new
exit
flight_offer.price_total.to_s
flight_offer.price_total.to_f
flight_offer.price_total.to_i
flight_offer.price_total
exit
flight_offer.last_ticketing_date.to_s
flight_offer.last_ticketing_date
flight_offer
exit
response
exit
response.unprocessable?
response.methods
c
exit
response
exit
@flight_offer.errors.full_messages
@flight_offer.valid?
exit
xit
FlightOffer.new(flight_offer_params)
exit
flight_offer_params
exit
@flight_offer.errors.full_messages
@flight_offer.errors.fill_messages
@flight_offer.errors.methods
@flight_offer.errors.full_message
@flight_offer.errors.message
@flight_offer.errors
@flight_offer.valid?
exit
response.status
response
exit
new_profile_path
profile_path
profiles_create_path
create_profile_path
exit
Profile.find_by_user_id(current_user.id)
current_user.id
exit
Profile.find_by_user_id(current_user.id)
current_user.id
exit
@profile.errors
@profile.update(profile_params)
exit
response.status
exit
profile_url
show_profile_url
profile_url
profile_path
exit
response.status
response
exit
response.status
response
exit
show_profile
profile_path_show
profile_show_path
profile_path
show_profile_path
exit
Profile.new(profile_params, user)
Profile.new(profile_params)
@profile.errors
@profile.save
exit
self.user_id
user_id
current_user
user
current_user
c
exit
@profile.errors
@profile.save
c
exit
potato
potato = post profile_url, params: { profile: valid_attributes }
exit
Profile.new(profile_params)
c
exit
Profile.find_by_user_id(current_user.id)
current_user.id
exit
response.body
response
exit
user.user? || user.super_user? || user.admin?
user.admin?
user.super_user?
user.user?
user.role
user == record.user
record.user
user
exit
@profile
c
exit
@profile
exit
Profile.find_by_user_id(profile.user.id)
Profile.find_by_user_id
Profile.all
response.status
response
c
@profile
exit
@profile
exit
response
exit
current_user?
current_user
exit
profile.user.confirmed?
profile.user.confirmed
profile.user.confirm
profile.user.confirmed
profile.user.confirmed?
profile.user
profile
c
exit
profile.user
profile.user\
get show_profile_url
sign_in profile.user
get show_profile_url
c
exit
user.confirmed_at
user
user.fields
user.confirm
user
response.body
response.status
response
exit
profile.user
response.status
respnse.status
response
exit
response.status
show_profile_url
body
